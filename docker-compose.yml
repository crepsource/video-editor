version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: video-editor-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: video_editor
      POSTGRES_USER: video_admin
      POSTGRES_PASSWORD: dev_password_2024
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/v2_database_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./scripts/seed_data.sql:/docker-entrypoint-initdb.d/02-seed.sql:ro
    ports:
      - "5432:5432"
    networks:
      - video-editor-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U video_admin -d video_editor"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:8
    container_name: video-editor-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./database/pgadmin_servers.json:/pgadmin4/servers.json:ro
    ports:
      - "5050:80"
    networks:
      - video-editor-network
    depends_on:
      postgres:
        condition: service_healthy

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: video-editor-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    networks:
      - video-editor-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  video-editor-network:
    driver: bridge